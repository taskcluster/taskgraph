### Project
[project]
name = "taskcluster-taskgraph"
description = "Build taskcluster taskgraphs"
readme = "README.rst"
authors = [
  { name = "Mozilla Release Engineering", email = "release+taskgraph@mozilla.com" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development",
]
requires-python = ">=3.8"
dependencies = [
  "appdirs>=1.4",
  "cookiecutter~=2.1",
  "json-e>=2.7",
  "mozilla-repo-urls",
  "PyYAML>=5.3.1",
  "redo>=2.0",
  "requests>=2.25",
  "slugid>=2.0",
  "taskcluster-urls>=11.0",
  "voluptuous>=0.12.1",
]
dynamic = ["version"]  # set in src/taskgraph/__init__.py

[project.optional-dependencies]
load-image = [
  "zstandard"
]

[project.scripts]
taskgraph = "taskgraph.main:main"

[project.urls]
Repository = "https://github.com/taskcluster/taskgraph"
Issues = "https://github.com/taskcluster/taskgraph/issues"

[tool.uv]
dev-dependencies = [
  "coverage",
  "mock",
  "pre-commit",
  "pyright",
  "pytest",
  "pytest-mock",
  "responses",
  "sphinx",
  "sphinx-autobuild",
  "sphinx-argparse",
  "sphinx-book-theme >=1",
  "sphinxcontrib-mermaid",
  "zstandard",
]

### Build
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/taskgraph"]

[tool.hatch.metadata.hooks.custom]
path = ".hatch_build.py"  # handles reading version from src/taskgraph/__init__.py

### Test
[tool.pytest.ini_options]
xfail_strict = true

[tool.coverage.run]
branch = true
source = ["src/taskgraph/", "src/taskgraph/run-task/", "test"]

### Lint and Format
[tool.ruff]
extend-exclude = [
  "taskcluster/scripts/external_tools"
]
line-length = 88

[tool.ruff.lint]
select = [
    "E", "W",       # pycodestyle
    "F",            # pyflakes
    "I",            # isort
    "PLC", "PLE",   # pylint
    "UP",           # pyupgrade
]
ignore = [
    "E402",
    "E501",  # let black handle line-length
    "E741",
]

[tool.ruff.lint.isort]
known-first-party = ["taskgraph"]

[tool.pyright]
include = ["src"]
reportIncompatibleMethodOverride = false
