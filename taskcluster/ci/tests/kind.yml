# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
---

loader: taskgraph.loader.transform:loader

transforms:
    - taskgraph.transforms.job:transforms
    - taskgraph.transforms.task:transforms

job-defaults:
    attributes:
        retrigger: true
        code-review: true
    worker-type: t-linux
    worker:
        docker-image: {in-tree: python3.7}
        max-run-time: 3600
        env:
            LC_ALL: "C"
            PYTHONUTF8: "0"
            PYTHONCOERCECLOCALE: "0"
            HGENCODING: "utf-8"
    treeherder:
        kind: test
        platform: tests/opt
        tier: 1
    run:
        using: run-task
        cwd: '{checkout}'
        cache-dotcache: true

jobs:
    unit:
        description: "Run `unit tests` to validate the latest changes"
        treeherder:
            symbol: unit
        attributes:
            artifact_prefix: public
        worker:
            artifacts:
                - type: file
                  path: /builds/worker/artifacts/coverage.xml
                  name: public/coverage.xml
            env:
                COVERAGE_REPORT_COMMAND: "coverage xml -o /builds/worker/artifacts/coverage.xml"
                TOX_PARALLEL_NO_SPINNER: "1"
        run:
            command: >-
                pip install --user -r requirements/test.txt &&
                pip install --user --no-deps . &&
                pyenv latest local 3.10 3.9 3.8 3.7 &&
                tox --parallel

    flake8:
        description: "Run `flake8` on Python 3 to validate the latest changes"
        treeherder:
            symbol: flake8
        run:
            command: >-
                pip install --user -r requirements/test.txt &&
                flake8

    black:
        description: "Run `black` to validate the latest changes"
        treeherder:
            symbol: black
        run:
            command: >-
                pip install --user -r requirements/test.txt &&
                black --check .

    yamllint:
        description: "Run `yamllint` to validate the latest changes"
        treeherder:
            symbol: yaml
        run:
            command: >-
                pip install --user -r requirements/test.txt &&
                yamllint .
